name: Build LaTeX and Upload to Google Drive

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create output directory
        run: |
          mkdir -p src/output

      - name: Build PDF with Docker
        run: |
          docker compose build latex
          docker compose up build

      - name: List files for debugging
        run: |
          echo "=== Checking src directory ==="
          ls -la src/
          echo "=== Checking for PDF files ==="
          find src/ -name "*.pdf" || echo "No PDF files found"

      - name: Check if PDF was created
        run: |
          if [ -f src/main.pdf ]; then
            echo "PDF found at src/main.pdf"
            mkdir -p src/output
            mv src/main.pdf src/output/main.pdf
          elif [ -f src/output/main.pdf ]; then
            echo "PDF found at src/output/main.pdf"
          else
            echo "Error: PDF file was not created"
            echo "=== Docker build logs ==="
            docker compose logs build
            exit 1
          fi
          echo "PDF successfully created"

      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-pdf
          path: src/output/main.pdf
          retention-days: 30

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          token_format: access_token
          access_token_scopes: https://www.googleapis.com/auth/drive.file

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload to Google Drive
        id: upload
        env:
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        run: |
          echo "Getting access token..."
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          
          if [ -z "$ACCESS_TOKEN" ]; then
            echo "Error: Failed to get access token"
            exit 1
          fi
          
          echo "Access token obtained successfully"
          echo "Folder ID: ${GOOGLE_DRIVE_FOLDER_ID}"
          
          FILE_NAME="main_$(date +%Y%m%d_%H%M%S).pdf"
          echo "Uploading file as: ${FILE_NAME}"
          
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -F "metadata={name:'${FILE_NAME}',parents:['${GOOGLE_DRIVE_FOLDER_ID}']};type=application/json;charset=UTF-8" \
            -F "file=@src/output/main.pdf;type=application/pdf" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)
          
          echo "HTTP Status Code: ${HTTP_CODE}"
          echo "Response Body: ${BODY}"
          
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "PDF uploaded to Google Drive successfully"
            FILE_ID=$(echo "$BODY" | grep -o '"id": *"[^"]*"' | grep -o '"[^"]*"$' | tr -d '"')
            FILE_URL="https://drive.google.com/file/d/${FILE_ID}/view"
            echo "file_url=${FILE_URL}" >> $GITHUB_OUTPUT
            echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Error: Upload failed with status code ${HTTP_CODE}"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Send Discord notification on success
        if: steps.upload.outputs.success == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=%an)
          COMMIT_URL="${{ github.event.repository.html_url }}/commit/${{ github.sha }}"
          
          curl -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"📄 PDF Build Successful\",
                \"description\": \"PDFが正常にビルドされ、Google Driveにアップロードされました\",
                \"color\": 3066993,
                \"fields\": [
                  {
                    \"name\": \"📁 ファイル名\",
                    \"value\": \"${{ steps.upload.outputs.file_name }}\",
                    \"inline\": false
                  },
                  {
                    \"name\": \"🔗 Google Drive\",
                    \"value\": \"[ファイルを開く](${{ steps.upload.outputs.file_url }})\",
                    \"inline\": false
                  },
                  {
                    \"name\": \"👤 コミット作成者\",
                    \"value\": \"${COMMIT_AUTHOR}\",
                    \"inline\": true
                  },
                  {
                    \"name\": \"📝 コミットメッセージ\",
                    \"value\": \"${COMMIT_MESSAGE}\",
                    \"inline\": false
                  },
                  {
                    \"name\": \"🔗 コミット\",
                    \"value\": \"[View on GitHub](${COMMIT_URL})\",
                    \"inline\": false
                  }
                ],
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
              }]
            }" \
            "${DISCORD_WEBHOOK_URL}"

      - name: Send Discord notification on failure
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=%an)
          COMMIT_URL="${{ github.event.repository.html_url }}/commit/${{ github.sha }}"
          RUN_URL="${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
          
          curl -H "Content-Type: application/json" \
            -d "{
              \"embeds\": [{
                \"title\": \"❌ PDF Build Failed\",
                \"description\": \"PDFのビルドまたはアップロードに失敗しました\",
                \"color\": 15158332,
                \"fields\": [
                  {
                    \"name\": \"👤 コミット作成者\",
                    \"value\": \"${COMMIT_AUTHOR}\",
                    \"inline\": true
                  },
                  {
                    \"name\": \"📝 コミットメッセージ\",
                    \"value\": \"${COMMIT_MESSAGE}\",
                    \"inline\": false
                  },
                  {
                    \"name\": \"🔗 詳細を確認\",
                    \"value\": \"[GitHub Actions Log](${RUN_URL})\",
                    \"inline\": false
                  }
                ],
                \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
              }]
            }" \
            "${DISCORD_WEBHOOK_URL}"

      - name: Clean up
        if: always()
        run: |
          docker compose up clean || true